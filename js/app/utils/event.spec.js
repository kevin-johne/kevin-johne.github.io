!function(e,n,t,i){"use strict";n(["require","jquery"],function(e,n){describe("Event Dispatcher",function(){var n="/testrunner/1",i="/testrunner/2",r="/testrunner/3",o="/testrunner/4",u="/testrunner/5",s="/testrunner/5.namespace",c="/testrunner/6",f="/testrunner/6.namespace",a="/testrunner/7";before(function(){t.undef("utils/event")}),afterEach(function(){t.undef("utils/event")}),it("should register an event",function(t){e(["utils/event"],function(e){e.on(n,function(){}),t()})}),it("should fire an event",function(n){e(["utils/event"],function(e){e.on(i,function(){n()}),e.trigger(i)})}),it("should pass the correct arguments",function(n){e(["utils/event"],function(e){var t="testString";e.on(r,function(e,i){expect(i).to.be.equal(t),n()}),e.trigger(r,[t])})}),it("should trigger an event with custom scope",function(n){e(["utils/event"],function(e){var t={};e.on(r,function(e,i){expect(this).to.be.equal(t),n()}),e.trigger(r,[],t)})}),it("should be possible to unregister an event",function(n){e(["utils/event"],function(e){var t=0;e.on(o,function(e){t+=1}),e.trigger(o),e.off(o),e.trigger(o),1===t&&n()})}),it("should be possible to unregister a namespaced event without unregistering an other same named event without namespace",function(n){e(["utils/event"],function(e){var t=0;e.on(u,function(e){t+=1}),e.on(s,function(e){t+=1}),e.trigger(u),e.off(s),e.trigger(u),3===t&&n()})}),it("should be possible to unregister a all same named events, even namespaced",function(n){e(["utils/event"],function(e){var t=0;e.on(c,function(e){t+=1}),e.on(f,function(e){t+=1}),e.trigger(c),e.off(c),e.trigger(c),2===t&&n()})}),it("should be possible to register an event that is only called once",function(n){e(["utils/event"],function(e){var t=0;e.one(a,function(e){t+=1}),e.trigger(a),e.trigger(a),1===t&&n()})}),it("should be possible to unregister a namespaced event more then one time",function(n){e(["utils/event"],function(e){var t=0;e.on(u,function(e){t+=1}),e.on(s,function(e){t+=1}),e.trigger(u),e.off(s),e.off(s),e.trigger(u),3===t&&n()})})})})}(this,this.define,this.requirejs);