[
    {
        "title": "Calvin Klein",
        "year": "2019",
        "duration": "3",
        "tags": [
            "React",
            "SCSS",
            "Webpack",
            "Redux"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/calvin_preview.jpg"
        },
        "descriptions": [
            "A short recap of the replatforming and redesign of Calvin Klein to a new stack within 3 months. We moved the code base from JSP to React and Redux. JSP is the frontend language for a monolithic Java web application, the technology has struggles meeting the standards of a modern e-Commerce platform, especially with APIs with JSON response. Redux is perfect in handling data in a headless manner and tunnelling the information to the react components.",
            "When the application is loaded the majority of data is in the html page attached to the window object, like store, product, navigation, and internationalisation and other cacheable data, this saves few XHR requests. After page loaded, repeatedly changing information like user info, basket, product stock is fetched asynchronously.",
            "This was the second commercial project where I used React. I enjoy the way components are written, because the structure of the application takes a natural and extendable flow. A high priority was to make the components dummy without internal state, but merely pass down properties - following this, components stay simple and removes the need of documentation. The components are easy replaceable and maintainable.",
            "Now you wonder where the state is stored, when components are dummy and receiving only props. Firstly we have few components which have internal state, like a toggle, etc. However we tried to store the state in Redux slices, there are approx. 10 of them. We had slices for authentication, basket, products, navigation, analytics, internationalisation, and more.",
            "Slices are a neat way of housekeeping the state, I am a fan of keeping them flat and broad. So that the dependencies getting not deep and complex. Just thing of object spread how straight forward it is when everything is one level deep. My rule of thumb is max 2 levels deep, is it more than that it signals and increase in dependency and complexity, and it is a good idea to separate some of the data in a new slice. Another advantage is that a shallow store will not update the component as often as a store with a deep object, because the \"subscribed\" component will only \"watch\" just one value and not an whole object where the reconciliation flags an false positive of change. This means the object looks the same but it isn't as it got spread but with the same values. A shallow comparison is always faster than a holistic comparison."
        ],
        "features" : [
            {
                "title" : "redesign",
                "image": "../images/content/project/calvin-klein/overview_x2.jpg",
                "text": [
                    "the redesign was done through out the main shopping areas at the same time. We improved pages for the product list, product detail, shopping bag and the checkout. Other pages like account pages got a little update as they have now the new header and footer as well."
                ]
            },
            {
                "title" : "Smart Navigation",
                "image": "../images/content/project/calvin-klein/navigation_x2.jpg",
                "text": [
                    "We improved the navigation by reading the mouse to predict the users pattern. For example The mouse is moved over Women, and the user wants to Kids, the cursor would go above Men. We not choose the use the timeout trick because of the caveat of a slower UI. Same as for the <a class='link' href='/#work/gedore'>Gedore</a> project."
                ]
            }
        ],
        "links": [
            "calvinklein.co.uk"
        ]
    },{
        "title": "Ströer",
        "year": "2016",
        "duration": "9",
        "tags": [
            "AngularJS",
            "SCSS",
            "Struts",
            "Java",
            "Lead Frontend Developer"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/stroeer_preview_large.jpg"
        },
        "descriptions": [
            "I started working on Ströer OMS to develop a calendar app. OMS is an internal management platform for maintenance of their billboards. Which has a complex infrastructure. I was working mainly on the frontend, writing templates in Struts (Java template engine), displaying data with AngularJS, and styling with SCSS. Data was retrieved from an API with ajax calls.",
            "After finishing the calendar, I have been continuing working for Ströer for platform maintenance. I soloed the frontend till couple of months later I established a team of three developer which I was leading."
        ],
        "features" : [
            {
                "title" : "List Management",
                "image": "../images/content/project/stroeer/overview_2x.jpg",
                "text": [
                    "OMS is a complex application with many different views for management of billboards and billboard events. Most of the views have a list of items in common. I implemented the UI for an advanced filter system including saving, loading, editing, and deleting of filter settings."
                ]
            },
            {
                "title" : "Calendar",
                "image": "../images/content/project/stroeer/calendar_2x.jpg",
                "text": [
                    "The calendar is displaying management tasks of a selected billboard. The span goes from yearly to monthly for a more detailed view. Allowing users getting their daily tasks, and for the upper management a quick info about which tasks have been done in time."
                ]
            }
        ]
    },
    {
        "title": "Gedore",
        "year": "2015",
        "duration": "3",
        "tags": [
            "eCommerce",
            "frontend",
            "atomic"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/gedore_preview_large.jpg"
        },
        "descriptions": [
            "Here we have three projects for the client Gedore. Everything has been freshly designed and developed. A complete redesign - topic is BOLD. Starting off with the Gedore brand site, presenting news, product catalog, interactive storefinder and many more. Behind the scene is a Typo3 CMS to serve those sites. Website are easily created as the toolbox offers 20+ modules and more global patterns. All handcrafted by denkwerk.",
            "In the frontend department, we created a living style guide, based on the module catalog made by the UX and visual designer. This living style guide was a list of global definitions, patterns, modules, and example pages. As global definitions we specified general configuration which everything is based on later, containing i.e. font families, font sizes, colours, grid, indents, breakpoints, margins, and animation time functions. The beauty of these configurations is the possibility to alter the whole theme within seconds. That's how we created the Carolus brand site, only by changing colour, font families and other settings.",
            "I'm very thank full to had a part of these projects, my UI easter egg which is the main navigation. Which has a drop down navigation on hover, a tricky piece. The problem? Not closing the submenu accidentally by hovering over another main menu entry when the mouse is one the way to a sub menu entry diagonally placed to its parent. Preventing this is usually solved with a time out which activates on leaving a main item. it solves the problem for fast user with a fast movement. Not only it doesn't work for slow mouse movements, as well it makes it not responsive.",
            "A mouse direction detection is used. Spanning a triangle from the current mouse position by entering a main menu entry to the top left and top right corner of the submenu. If the mouse is staying it the triangle, even hovering over another main menu entry, the submenu stays open. This technique is invented by Apple and used by amazon.com at their navigation.",
            "And lastly the Gedore shop, which is OXID and smarty templates. We created a living style guide, out of smarty modules and patterns, each can be easily included in to the page, and modified through parameters."
        ],
        "features" : [
            {
                "title" : "Style Guide",
                "image": "../images/content/project/gedore/styleguide_2x.jpg",
                "text": [
                    "Generating a living style guide using Grunt, Nunjucks, and SCSS. The output are HTML pages of general configurations, patterns, modules, and static content pages. Which were later implemented in Typo3."
                ]
            },
            {
                "title" : "Variables",
                "image": "../images/content/project/gedore/theme_2x.jpg",
                "text": [
                    "Nunjucks and SCSS allowed us to use variables. Already in the early state, we established many variables for later configuration. When we needed to develop Carolus, this technique came very handy. A change in the configuration and we were done, except updating content."
                ]
            },
            {
                "title" : "Smart Navigation",
                "image": "../images/content/project/gedore/navigation_2x.jpg",
                "text": [
                    "Invented by Apple to improve on OS X sub navigation. Amazon is using this technique to improve sub navigation as well. That's why I implemented this feature for Gedore on all three sites. No timeout, only protocol mouse movements to assume when to close and open a menu."
                ]
            }
        ],
        "links": [
            "gedore.com",
            "carolus.de",
            "de.gedore-shop.com"
        ]
    },
    {
        "title": "condor",
        "year": "2016",
        "duration": "4",
        "tags": [
            "ARIA",
            "semantic",
            "screen reader"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/condor_preview_large.jpg"
        },
        "descriptions": [
            "My journey with Condor airlines was a pleasant one. I took the chance to teach myself a new skill, many developers don't even think or know about it.",
            "condor part of the Thomas Cook Group is offering a service of public airline booking. In the UK and US it is a law to meet the standard of WCAG level AA for those systems. When this rule got released the booking engine and website needed to be enhanced for people with disabilities till the end of 2015(US) and 2016(UK).",
            "Before making improvements in usability, we needed a tool to measure the current state and every incremental improvement we may make, to reach the goal as fast as possible. We asked a third party service to provide us with reports after every major release, and we used browser tools and screen readers to test our changes. Testing became time intensive through lag of tools.",
            "A big part of the changes had been made in the use of correct context tags, i.e. using buttons instead of links for submitting forms, or ordering headlines h3 cannot come before h2. We added new elements, i.e. skip links and close buttons for layers, and improved tags with aria attributes to describe the seat and prices.",
            "The changes we made until this point were usability improvements for screen-readers, other people with a visual disability and using normal screens seeing mostly fewer colours. The visual designer needed to come up with a new high contrast theme. green changed to orange, white text on coloured background changed to dark gray, blue got darker, active elements needing a highlighted border, and many other changes to increase contrast."
        ],
        "features" : [
            {
                "title" : "Helper Elements",
                "image": "../images/content/project/condor/helper-elements_2x.jpg",
                "text": [
                    "Extra elements helping to skip content, outlining focused elements, and buttons for closing layers. Skip links are only visible on focus."
                ]
            },
            {
                "title" : "Semantic Markup",
                "image": "../images/content/project/condor/semantic-markup_2x.jpg",
                "text": [
                    "HTML5 provides a big range of tags to describe the visual content better. We took care that we use the right tags, and added when necessary ARIA attributes"
                ]
            }
        ],
        "links": [
            "../images/condor.com"
        ]
    },
    {
        "title": "Zwilling",
        "year": "2015",
        "duration": "3 months",
        "tags": [
            "frontend",
            "modules",
            "task runner"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/zwilling_preview_large.jpg"
        },
        "descriptions": [
            "New at denkwerk and had to step right into development of new modules for Zwilling. Later on I was in charge of setting up Grunt pipelines for recurring dev tasks. It was a project including Zwilling online shop, Zwilling, Miyabi, Demeyere and Staub brand website. I was helping out in all five projects to fix bugs and create minor modules."
        ],
        "features" : [
            {
                "title" : "New UI Components",
                "image": "../images/content/project/zwilling/modules_2x.jpg",
                "text": [
                    "As I can remember I was in charge for the show&hide pattern, longer paragraphs fading out, and a 'Read More' button added for expanding. A header module for special offers. As well as an language selector on the footer, which is used by all 5 websites."
                ]
            },
            {
                "title" : "GruntJs Refactoring",
                "image": "../images/content/project/zwilling/task-runner_2x.jpg",
                "text": [
                    "Building projects, minifying code, and optimizing assets were part of thr GruntJS tasks. All described in one huge file, I took the refactoring in my hands, categorizing first tasks in frequency of use. At the end a folder hierarchy organized modified and new tasks. This improved the time of the build by 80%."
                ]
            }
        ],
        "links": [
            "www.zwilling.com"
        ]
    },
    {
        "title": "UNESCO New Baraka",
        "year": "2016",
        "duration": "1 month",
        "tags": [
            "PHP",
            "JS",
            "Animation",
            "ScrollMagic"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/baraka_preview_large.jpg"
        },
        "descriptions": [
            "I enjoyed developing the mobile version of the donation platform. Happy animated illustrations and sounds effects making the purpose of the product easy to understand.",
            "The website applied for Red Dot Awards and won in 'Online', 'E-Commerce' and 'Social Responsibility'. Later the PAGE, a German magazine, which publishes articles about design, technology, and business, published an article about the platform New Baraka, it got printed in the 07.2016 issue."
        ],
        "features" : [
            {
                "title" : "Responsive website",
                "image": "../images/content/project/baraka/responsive_2x.jpg",
                "text": [
                    "We decided to make two websites, one for desktop/tablet and one for mobile. This reduced the footprint of data for the mobile website, as all the high resolutions animated images or sounds were not used for mobile. I maintained the desktop website, and developed from scratch mobile website."
                ]
            },
            {
                "title" : "The PAGE issue 07.2016",
                "image": "../images/content/project/baraka/magazine_2x.jpg",
                "text": [
                    "Give interview to PAGE reporter about animation technology we used to make website more alive."
                ]
            }
        ],
        "links": [
            "new-baraka.com"
        ]
    },
    {
        "title": "Jacques Weindepot",
        "year": "2016",
        "duration": "2 months",
        "tags": [
            "Mobile",
            "Static",
            "Living Style Guide"
        ],
        "previewImg": {
            "src": "../images/content/project/preview/jacques_preview_large.jpg",
            "title": "previewImg"
        },
        "descriptions": [
            "At denkwerk, a cooperation with Jacques' IT in making a mobile website of the already existing desktop version. The UX team encounter the challenge of rebuild desktop features for the mobile context. We as frontend developer transferred the wire-frames to static HTML, JS, and CSS. Which later Jacques' IT integrated to their shop platform."
        ],
        "features" : [
            {
                "title" : "Mobile Website",
                "image": "../images/content/project/jacques/mobile_2x.jpg",
                "text": [
                    "Translating designs to HTML and CSS documents. All components are collected in a living style guide."
                ]
            }
        ],
        "links": [
            "www.jacques.de"
        ]
    }
]
