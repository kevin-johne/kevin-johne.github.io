{"version":3,"file":"component---src-pages-work-js-5608229c53259e5bf5c6.js","mappings":"2LAGaA,EAAUC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,qEAIPC,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,MAAsBA,EAAAA,EAAAA,SAKjCC,EAASH,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,mIAWRC,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,QAAwBA,EAAAA,EAAAA,U,mJCfxCE,EAAUJ,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,uHAIWK,EAAAA,IAGXJ,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,QAAwBA,EAAAA,EAAAA,SAK1CI,GAAWN,EAAAA,EAAAA,SAAOO,EAAAA,MAAV,2EAAGP,CAAH,uxCAKc,SAAAQ,GAAK,OAAIA,EAAMC,MAOXJ,EAAAA,GACGA,EAAAA,IAoC7B,SAAAG,GAAK,OAAKA,EAAME,QAAP,wPAaFT,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,MAAsBA,EAAAA,EAAAA,SAsBjCD,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,QAAwBA,EAAAA,EAAAA,QA4ChD,EAlBkB,SAAC,GAAe,IAAbS,EAAY,EAAZA,MACnB,OACE,gBAACP,EAAD,KACGO,GAASA,EAAMC,KAAI,WAAsBC,GAAW,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,WAC3B,OACE,gBAACT,EAAD,CAAUU,GAAE,SAAWF,EAAMG,cAAiBR,IAAKM,EAAWN,IAAIS,UAAWC,IAAKN,GAC9E,gBAAC,IAAD,CAAKO,IAAKN,EAAOL,IAAKM,EAAWN,IAAIS,gBAI7C,gBAACZ,EAAD,CAAUe,GAAG,IAAIX,QAAM,GACrB,gBAAC,EAAAY,EAAD,CAAab,IAAI,+BAA+BW,IAAI,eAApD,yB,UCjGR,EAtCa,SAAC,GAAY,IAAXG,EAAU,EAAVA,KACb,OACE,gCACE,gBAACC,EAAA,EAAD,KACE,wBAAMC,KAAK,cAAcC,QAAQ,uLACjC,yDAEF,gBAAC,IAAD,KACE,uCACA,gBAAC,IAAD,KACE,mRAQJ,gBAAC,EAAD,CAAWf,MAAOY,EAAKI,gBAAgBC,W,yDCtBhCC,E,KAAM7B,QAAAA,IAAAA,WAAH,oDAAGA,CAAH,2D","sources":["webpack://kevin-johne/./src/modules/content.js","webpack://kevin-johne/./src/modules/image-grid.js","webpack://kevin-johne/./src/pages/work.js","webpack://kevin-johne/./src/patterns/img.js"],"sourcesContent":["import styled from \"styled-components\"\nimport {breakpoint, breakpointsMap} from \"../utils/breakpoints\";\n\nexport const Content = styled.div`\n    width: 100%;\n    margin: 60px auto 120px;\n\n    @media ${breakpoint(breakpointsMap.small, breakpointsMap.medium)} {\n      margin: 60px auto;\n    }\n`\n\nexport const Column = styled.div`\n  column-count: 2;\n  column-gap: 50px;\n\n  margin-top: 1.5em;\n  margin-bottom: 1.5em;\n\n  p:first-of-type {\n      margin-top: 0;\n  }\n\n  @media ${breakpoint(breakpointsMap.default, breakpointsMap.medium)} {\n      column-count: 1;\n  }\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Img} from \"../patterns/img\";\nimport {StaticImage} from \"gatsby-plugin-image\";\nimport {colorBrand} from \"../setting/theme\";\nimport {breakpoint, breakpointsMap} from \"../utils/breakpoints\";\nimport {Link} from \"gatsby\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 120px;\n    background-color: ${colorBrand};\n    padding: 2px 0;\n\n    @media ${breakpoint(breakpointsMap.default, breakpointsMap.medium)} {\n      margin-bottom: 60px;\n    }\n`\n\nconst GridCell = styled(Link)`\n    position: relative;\n    width: 25%;\n    background-size: cover;\n    background-position: center;\n    background-image: url(${props => props.src});\n    perspective: 900px;\n    margin-bottom: 8px;\n    transition: filter 850ms cubic-bezier(0.250, 0.460, 0.450, 0.940);\n\n    img {\n        width: 100%;\n        border-top: 2px solid ${colorBrand};\n        border-bottom: 2px solid ${colorBrand};\n        display: block;\n        filter: grayscale(0);\n        transition: .5s linear;\n        transition-property: transform, filter, opacity;\n\n        &[data-src] {\n            padding-bottom: 25%;\n        }\n    }\n\n    &:nth-last-child(5) ~ * {\n        margin-bottom: 0;\n    }\n\n\n    &:nth-child(5n),\n    &:nth-child(6n-4),\n    &:nth-child(7n),\n    &:nth-child(8n-4) {\n        img {\n            transform-origin: right center 0;\n            transform: rotateY(15deg);\n        }\n    }\n\n    &:nth-child(5n-4),\n    &:nth-child(6n),\n    &:nth-child(7n-4),\n    &:nth-child(8n) {\n        img {\n            transform-origin: left center 0;\n            transform: rotateY(-15deg);\n        }\n    }\n\n    ${props => !props.filler && `\n      &:hover {\n          filter: grayscale(0.9);\n          transition-delay: .3s;\n\n          img {\n              opacity: 0;\n              transform: rotateY(0deg);\n              transition-duration: .5s;\n          }\n      }\n    `}\n\n    @media ${breakpoint(breakpointsMap.small, breakpointsMap.medium)} {\n      margin-bottom: 4px;\n      &:nth-child(5n),\n      &:nth-child(6n-4),\n      &:nth-child(7n),\n      &:nth-child(8n-4) {\n          img {\n              transform-origin: right center 0;\n              transform: rotateY(10deg);\n          }\n      }\n      &:nth-child(5n-4),\n      &:nth-child(6n),\n      &:nth-child(7n-4),\n      &:nth-child(8n) {\n          img {\n              transform-origin: left center 0;\n              transform: rotateY(-10deg);\n          }\n      }\n    }\n\n    @media ${breakpoint(breakpointsMap.default, breakpointsMap.small)} {\n      margin-bottom: 0;\n      &:nth-child(5n),\n      &:nth-child(6n-4),\n      &:nth-child(7n),\n      &:nth-child(8n-4) {\n          img {\n              transform-origin: right center 0;\n              transform: rotateY(0);\n          }\n      }\n      &:nth-child(5n-4),\n      &:nth-child(6n),\n      &:nth-child(7n-4),\n      &:nth-child(8n) {\n          img {\n              transform-origin: left center 0;\n              transform: rotateY(0);\n          }\n      }\n      img {\n          border: 0;\n      }\n    }\n`\n\nconst ImageGrid = ({ items }) => {\n  return (\n    <Wrapper>\n      {items && items.map(({title, previewImg}, index) => {\n        return (\n          <GridCell to={`/work/${title.toLowerCase()}`} src={previewImg.src.publicURL} key={index}>\n              <Img alt={title} src={previewImg.src.publicURL}/>\n          </GridCell>\n        )})\n      }\n      <GridCell as=\"a\" filler>\n        <StaticImage src=\"../images/content/filler.jpg\" alt=\"nothing here\"/>\n       </GridCell>\n    </Wrapper>\n  )\n}\n\n\nexport default ImageGrid;\n","import React from \"react\"\nimport {Helmet} from \"react-helmet\";\nimport {graphql} from \"gatsby\";\nimport ImageGrid from \"../modules/image-grid\";\nimport {Column, Content} from \"../modules/content\";\n\nconst Work = ({data}) => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Style guides, e-commerce, web apps, and angular apps are the kind Kevin Johne has experience with. His portfolio is displaying recently finished projects as a frontend developer.\"/>\n        <title>Kevin Johne - portfolio</title>\n      </Helmet>\n      <Content>\n        <h1>Portfolio</h1>\n        <Column>\n          <p>\n            In the last years I've been working as a frontend developer and was lucky enough to got involved in creative\n            and\n            interesting projects. My work was dedicated to create living style guides, web apps, e-commerce platforms for\n            international brands.\n          </p>\n        </Column>\n      </Content>\n      <ImageGrid items={data.allProjectsJson.nodes}/>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    allProjectsJson {\n      nodes {\n        title\n        previewImg {\n          src {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Work;\n","import styled from \"styled-components\"\n\nexport const Img = styled.img`\n    width: 100%;\n    opacity: 1;\n    transition: opacity .3s ease-in;\n`\n\n//img[data-src] {\n//    opacity: 0;\n//}\n"],"names":["Content","styled","breakpoint","breakpointsMap","Column","Wrapper","colorBrand","GridCell","Link","props","src","filler","items","map","index","title","previewImg","to","toLowerCase","publicURL","key","alt","as","S","data","Helmet","name","content","allProjectsJson","nodes","Img"],"sourceRoot":""}